#####################################################################
# |<    4-bits    >|<      1-bit      >|<    1-bit   >|<   8-bits  >|
# +----------------+-------------------+--------------+-------------+
# | replay command | 0:update 1:enable | update value | 8 neighbors |
# +----------------+-------------------+--------------+-------------+
#####################################################################

# EXAMPLES:
# Update, value = 1
0001__0_1_00000000
# Recv 1, live cell
0010__000000000_1
# Enable, 8 neighbors = 8'b01000100
0001__1_0_01000100
# Recv 1, a live cell with two live neighbours lives on to the next generation.
0010__000000000_1


# TODO: Add more testing traces here!!!
# Please create at least 20 test cases:
# Set the update value to 0, then set enbale to 1 and test with 0-8 live neighbors
# Set the update value to 1, then set enbale to 1 and test with 0-8 live neighbors

# TEST DEAD CELL CONDITION
# Set the update value to 0, then set enbale to 1 and test with 0-8 live neighbors

# Update, value = 0
0001__0_0_00000000
# Recv 0, dead cell
0010__000000000_0

# Enable, 8 neighbors = 8'b00000000 (0 live neighbors)
0001__1_0_00000000
# Recv 0, a dead cell with no live neighbor is still dead on to the next generation.
0010__000000000_0

# Enable, 8 neighbors = 8'b00000001 (1 live neighbor)
0001__1_0_00000001
# Recv 0, a dead cell with 1 neighbor is still dead on to the next generation.
0010__000000000_0

# Enable, 8 neighbors = 8'b00000011 (2 live neighbors)
0001__1_0_00000011
# Recv 0, a dead cell with 2 neighbors is still dead on to the next generation.
0010__000000000_0

# Enable, 8 neighbors = 8'b00111000 (3 live neighbors)
0001__1_0_00111000
# Recv 1, a dead cell with 3 neighbors is live on to the next generation.
0010__000000000_1

# RESET BACK TO DEAD CONDITION
# Update, value = 0
0001__0_0_00000000
# Recv 0, dead cell
0010__000000000_0

# Enable, 8 neighbors = 8'b00111100 (4 live neighbors)
0001__1_0_00111100
# Recv 0, a dead cell with 4 neighbors is still dead on to the next generation.
0010__000000000_0

# Enable, 8 neighbors = 8'b10111100 (5 live neighbors)
0001__1_0_10111100
# Recv 0, a dead cell with 5 neighbors is still dead on to the next generation.
0010__000000000_0

# Enable, 8 neighbors = 8'b10111101 (6 live neighbors)
0001__1_0_10111101
# Recv 0, a dead cell with 6 neighbors is still dead on to the next generation.
0010__000000000_0

# Enable, 8 neighbors = 8'b10111111 (7 live neighbors)
0001__1_0_10111101
# Recv 0, a dead cell with 7 neighbors is still dead on to the next generation.
0010__000000000_0

# Enable, 8 neighbors = 8'b11111111 (8 live neighbors)
0001__1_0_10111101
# Recv 0, a dead cell with 8 neighbors is still dead on to the next generation.
0010__000000000_0

# TEST LIVE CELL CONDITION
# && set en_i and update_val_i to 1 simultaneously to see that update_val_i does not interfere with en_i
# Set the update value to 1, then set enbale to 1 and test with 0-8 live neighbors

# Update, value = 1
0001__0_1_00000000
# Recv 1, live cell
0010__000000000_1

# Enable, 8 neighbors = 8'b00000000 (0 live neighbors)
0001__1_1_00000000
# Recv 0, a live cell with no live neighbor is dead on to the next generation.
0010__000000000_0

# Update, value = 1
0001__0_1_00000000
# Recv 1, live cell
0010__000000000_1

# Enable, 8 neighbors = 8'b00000001 (1 live neighbor)
0001__1_1_00000001
# Recv 0, a live cell with 1 neighbor is still dead on to the next generation.
0010__000000000_0

# Update, value = 1
0001__0_1_00000000
# Recv 1, live cell
0010__000000000_1

# Enable, 8 neighbors = 8'b00000011 (2 live neighbors)
0001__1_1_00000011
# Recv 1, a live cell with 2 neighbors is still alive on to the next generation.
0010__000000000_1

# Enable, 8 neighbors = 8'b00111000 (3 live neighbors)
0001__1_1_00111000
# Recv 1, a live cell with 3 neighbors is still alive on to the next generation.
0010__000000000_1

# Enable, 8 neighbors = 8'b00111100 (4 live neighbors)
0001__1_1_00111100
# Recv 0, a live cell with 4 neighbors is dead on to the next generation.
0010__000000000_0

# Update, value = 1
0001__0_1_00000000
# Recv 1, live cell
0010__000000000_1

# Enable, 8 neighbors = 8'b10111100 (5 live neighbors)
0001__1_1_10111100
# Recv 0, a live cell with 5 neighbors is dead on to the next generation.
0010__000000000_0

# Update, value = 1
0001__0_1_00000000
# Recv 1, live cell
0010__000000000_1

# Enable, 8 neighbors = 8'b10111101 (6 live neighbors)
0001__1_1_10111101
# Recv 0, a live cell with 6 neighbors is dead on to the next generation.
0010__000000000_0

# Update, value = 1
0001__0_1_00000000
# Recv 1, live cell
0010__000000000_1

# Enable, 8 neighbors = 8'b10111111 (7 live neighbors)
0001__1_1_10111101
# Recv 0, a live cell with 7 neighbors is dead on to the next generation.
0010__000000000_0

# Update, value = 1
0001__0_1_00000000
# Recv 1, live cell
0010__000000000_1

# Enable, 8 neighbors = 8'b11111111 (8 live neighbors)
0001__1_1_10111101
# Recv 0, a live cell with 8 neighbors is dead on to the next generation.
0010__000000000_0

# Update, value = 0
0001__0_0_00000000
# Recv 0, dead cell
0010__000000000_0


# Finish simulation
0100__0_0_00000000
